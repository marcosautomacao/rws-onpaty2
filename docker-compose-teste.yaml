version: '3'

services:
  #visualizador:
  #  image: dockersamples/visualizer
  #  volumes:
  #  - "/var/run/docker.sock:/var/run/docker.sock"
  #  ports:
  #  - 8079:8080
  #  deploy:
  #    placement:
  #      constraints:
  #        - node.role == manager
  front-end:
    image: nginx
    ports:
      - '8084:80'
    volumes: 
      - "C:/Users/Zupper/Desktop/Projects/on-paty/front-microservicos:/usr/share/nginx/html/"
      - "C:/Users/Zupper/Desktop/Projects/on-paty/front-microservicos/nginx.conf:/etc/nginx/conf.d/default.conf"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    networks:
      - net

  rws-onparty-middleware:
    container_name: rws-onparty-middleware
    #build:
    #  context: ./rws-onparty-middleware
    #  dockerfile: Dockerfile
    image: middleware
    ports:
      - "8081:8081"
    networks:
      - net

  rws-onparty-customer:
    container_name: rws-onparty-customer
    build:
      context: ./rws-onparty-customer
      dockerfile: Dockerfile
    #image: customer
    ports:
      - "8083:8083"
    networks:
      - net
    
  db-suppliers:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=onparty-suppliers
    networks:
      - net
  db-customers:
    image: postgres
    ports:
      - "5452:5432"
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=onparty-customers
    networks:
      - net

networks:
  net:
    # external: true
