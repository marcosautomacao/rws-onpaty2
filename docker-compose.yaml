version: '3.8'

services:
  visualizador:
    image: dockersamples/visualizer
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
    - 8080:8080
    deploy:
      placement:
        constraints:
         - node.role == manager
  front-end:
    container_name: front-end
    build:
      context: ./front-microservicos
      dockerfile: Dockerfile
    image: onparty/front-img
    ports:
      - '8084:80'
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - net

  rws-onparty-middleware:
    container_name: rws-onparty-middleware
    build:
     context: ./rws-onparty-middleware
     dockerfile: Dockerfile
    image: onparty/middleware-img
    ports:
      - '8081:8081'
    deploy:
      replicas: 1
      restart_policy:
          condition: on-failure
    networks:
      - net

  rws-onparty-supplier:
    container_name: rws-onparty-supplier
    build:
     context: ./rws-onparty-supplier-node
     dockerfile: Dockerfile
    image: onparty/supplier-img
    ports:
      - '3000:3000'
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 1
      restart_policy:
          condition: on-failure
    networks:
      - net
  
  db-suppliers:
    container_name: db-suppliers
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./rws-onparty-supplier-node/init.sql:/docker-entrypoint-initdb.d/1-schema.sql
    deploy:
      replicas: 1
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=onparty-suppliers
    networks:
      - net

networks:
  net:
    external: true
